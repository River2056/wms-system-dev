{"version":3,"sources":["components/layout/Header.js","components/TodoItem.js","components/Todos.js","components/AddTodo.js","components/pages/About.js","components/Clock.js","App.js","serviceWorker.js","index.js"],"names":["headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","Header","react_default","a","createElement","style","react_router_dom","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","isCompleted","props","todo","backgroundColor","borderBottom","fontStyle","inherits","createClass","key","value","_this$props$todo","id","title","fontSize","src","onClick","markComplete","bind","delTodo","className","btnStyle","Component","cursor","float","Todos","todos","map","components_TodoItem","AddTodo","state","inputChange","event","setState","defineProperty","target","name","submitForm","preventDefault","addTodo","onSubmit","display","type","flex","placeholder","onChange","About","Fragment","Clock","hour","Date","getHours","min","getMinutes","sec","getSeconds","day","getDay","date","getDate","month","getMonth","displayClock","updateTime","interval","setInterval","clearInterval","fontFamily","border","borderRadius","height","App","axios","get","then","res","toConsumableArray","filter","params","FormData","append","uuid","v4","post","console","log","data","_this2","_this3","layout_Header","react_router","exact","path","render","components_AddTodo","components_Todos","components_Clock","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f1d761a8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header style={headerStyle}>\r\n      <h1>TodoList</h1>\r\n      <Link style={linkStyle} to=\"/\">\r\n        Home\r\n      </Link>{\" \"}\r\n      |{\" \"}\r\n      <Link style={linkStyle} to=\"/about\">\r\n        About\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\n\r\nconst headerStyle = {\r\n  background: \"#333\",\r\n  color: \"#fff\",\r\n  textAlign: \"center\",\r\n  padding: \"10px\"\r\n};\r\n\r\nconst linkStyle = {\r\n  color: \"#fff\",\r\n  textDecoration: \"none\"\r\n};\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class TodoItem extends Component {\r\n  getStyle = () => {\r\n    const { isCompleted } = this.props.todo;\r\n    return {\r\n      textDecoration: isCompleted ? \"line-through\" : \"none\",\r\n      backgroundColor: isCompleted ? \"#28A745\" : \"#fbfbfb\",\r\n      padding: \"10px\",\r\n      borderBottom: \"1px #ccc dotted\",\r\n      color: isCompleted ? \"#fff\" : \"#000\",\r\n      fontStyle: isCompleted ? \"italic\" : \"normal\"\r\n    };\r\n  };\r\n\r\n  render() {\r\n    const { id, title, isCompleted } = this.props.todo;\r\n    return (\r\n      <div style={this.getStyle()}>\r\n        <p style={{ fontSize: \"20px\" }}>\r\n          <img\r\n            src={isCompleted ? \"img/tick.png\" : \"img/empty.png\"}\r\n            onClick={this.props.markComplete.bind(this, id)}\r\n          />{\" \"}\r\n          {title}\r\n          <button\r\n            onClick={this.props.delTodo.bind(this, id)}\r\n            className=\"btn btn-danger btn-sm\"\r\n            style={btnStyle}\r\n          >\r\n            X\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodoItem.propTypes = {\r\n  todo: PropTypes.object.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired\r\n};\r\n\r\nconst btnStyle = {\r\n  cursor: \"pointer\",\r\n  float: \"right\"\r\n};\r\n\r\nexport default TodoItem;\r\n","import React, { Component } from \"react\";\r\nimport TodoItem from \"./TodoItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Todos extends Component {\r\n  render() {\r\n    return this.props.todos.map(todo => (\r\n      <TodoItem\r\n        key={todo.id}\r\n        todo={todo}\r\n        markComplete={this.props.markComplete}\r\n        delTodo={this.props.delTodo}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\n// PropTypes\r\nTodos.propTypes = {\r\n  todos: PropTypes.array.isRequired,\r\n  markComplete: PropTypes.func.isRequired,\r\n  delTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Todos;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class AddTodo extends Component {\r\n  state = {\r\n    title: \"\"\r\n  };\r\n\r\n  inputChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  submitForm = event => {\r\n    event.preventDefault();\r\n    this.props.addTodo(this.state.title);\r\n    this.setState({ title: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.submitForm} style={{ display: \"flex\" }}>\r\n        <input\r\n          type=\"text\"\r\n          style={{ flex: \"10\", padding: \"10px\" }}\r\n          name=\"title\"\r\n          placeholder=\"Add Todo...\"\r\n          value={this.state.title}\r\n          onChange={this.inputChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          className=\"btn btn-primary\"\r\n          style={{ flex: \"1\" }}\r\n        />\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddTodo.propTypes = {\r\n  addTodo: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AddTodo;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About</h1>\r\n      <p>TodoList app v1.0.0 It is part of a React crash course</p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Clock extends Component {\r\n  state = {\r\n    hour: new Date().getHours(),\r\n    min: new Date().getMinutes(),\r\n    sec: new Date().getSeconds(),\r\n    day: new Date().getDay(),\r\n    date: new Date().getDate(),\r\n    month: new Date().getMonth()\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.interval = setInterval(this.displayClock, 100);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  displayClock = () => {\r\n    let updateTime = new Date();\r\n    let hour = updateTime.getHours();\r\n    let min = updateTime.getMinutes();\r\n    let sec = updateTime.getSeconds();\r\n    let day = updateTime.getDay();\r\n    let date = updateTime.getDate();\r\n    let month = updateTime.getMonth();\r\n\r\n    if (hour < 10) hour = \"0\" + hour;\r\n    if (min < 10) min = \"0\" + min;\r\n    if (sec < 10) sec = \"0\" + sec;\r\n\r\n    switch (day) {\r\n      case 0:\r\n        day = \"SUN\";\r\n        break;\r\n      case 1:\r\n        day = \"MON\";\r\n        break;\r\n      case 2:\r\n        day = \"TUE\";\r\n        break;\r\n      case 3:\r\n        day = \"WED\";\r\n        break;\r\n      case 4:\r\n        day = \"THUR\";\r\n        break;\r\n      case 5:\r\n        day = \"FRI\";\r\n        break;\r\n      case 6:\r\n        day = \"SAT\";\r\n        break;\r\n    }\r\n\r\n    switch (month) {\r\n      case 0:\r\n        month = \"JAN\";\r\n        break;\r\n      case 1:\r\n        month = \"FEB\";\r\n        break;\r\n      case 2:\r\n        month = \"MAR\";\r\n        break;\r\n      case 3:\r\n        month = \"APR\";\r\n        break;\r\n      case 4:\r\n        month = \"MAY\";\r\n        break;\r\n      case 5:\r\n        month = \"JUN\";\r\n        break;\r\n      case 6:\r\n        month = \"JULY\";\r\n        break;\r\n      case 7:\r\n        month = \"AUG\";\r\n        break;\r\n      case 8:\r\n        month = \"SEP\";\r\n        break;\r\n      case 9:\r\n        month = \"OCT\";\r\n        break;\r\n      case 10:\r\n        month = \"NOV\";\r\n        break;\r\n      case 11:\r\n        month = \"DEC\";\r\n        break;\r\n    }\r\n\r\n    this.setState({\r\n      hour: hour,\r\n      min: min,\r\n      sec: sec,\r\n      day: day,\r\n      date: date,\r\n      month: month\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={style}>\r\n        <span style={{ fontSize: \"25px\", float: \"left\" }}>\r\n          {this.state.hour}:{this.state.min}:{this.state.sec}\r\n        </span>\r\n        <span style={{ fontSize: \"25px\", float: \"right\" }}>\r\n          {this.state.day}-{this.state.date}-{this.state.month}\r\n        </span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst style = {\r\n  fontFamily: \"Orbitron\",\r\n  border: \"3px solid #007ACC\",\r\n  borderRadius: \"5px\",\r\n  height: \"45px\"\r\n};\r\n\r\nexport default Clock;\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/layout/Header\";\nimport Todos from \"./components/Todos\";\nimport AddTodo from \"./components/AddTodo\";\nimport About from \"./components/pages/About\";\nimport Clock from \"./components/Clock\";\nimport uuid from \"uuid\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    todos: []\n  };\n\n  componentDidMount() {\n    axios.get(\"/todos/list.do\").then(res => {\n      this.setState({ todos: res.data.data });\n    });\n  }\n\n  // Toggle Complete\n  markComplete = id => {\n    this.setState({\n      todos: this.state.todos.map(todo => {\n        if (todo.id === id) {\n          todo.isCompleted = todo.isCompleted === 1 ? 0 : 1;\n          if (todo.isCompleted === 1) {\n            axios\n              .get(`/todos/update.do?id=${id}&isCompleted=1`)\n              .then(res => {});\n          } else {\n            axios\n              .get(`/todos/update.do?id=${id}&isCompleted=0`)\n              .then(res => {});\n          }\n        }\n        return todo;\n      })\n    });\n  };\n\n  // Delete Todo\n  delTodo = id => {\n    axios.get(`/todos/delete.do?id=${id}`).then(res =>\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      })\n    );\n\n    // this.setState({\n    //   todos: [...this.state.todos.filter(todo => todo.id !== id)]\n    // });\n    // fs.writeFileSync(\"src/data.json\", JSON.stringify(this.state.todos));\n  };\n\n  // Add Todo\n  addTodo = title => {\n    const params = new FormData();\n    params.append(\"id\", uuid.v4());\n    params.append(\"uid\", 1);\n    params.append(\"title\", title);\n    params.append(\"isCompleted\", 0);\n    axios.post(\"/todos/add.do\", params).then(res => {\n      console.log(res.data.data);\n      this.setState({ todos: [res.data.data, ...this.state.todos] });\n    });\n\n    // const newTodo = {\n    //   id: uuid.v4(),\n    //   title,\n    //   isCompleted: false\n    // };\n    // this.setState({ todos: [newTodo, ...this.state.todos] });\n    // fs.writeFileSync(\"src/data.json\", JSON.stringify(this.state.todos));\n  };\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n            <Header />\n            <Route\n              exact\n              path=\"/\"\n              render={props => (\n                <React.Fragment>\n                  <AddTodo addTodo={this.addTodo} />\n                  <Todos\n                    todos={this.state.todos}\n                    markComplete={this.markComplete}\n                    delTodo={this.delTodo}\n                  />\n                  <Clock />\n                </React.Fragment>\n              )}\n            />\n            <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}